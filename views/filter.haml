!!! XML
!!!
%html
  %head
    %title Filtering Result
    %meta{:charset => "utf-8", :content => "text/html", "http-equiv" => "content"}
    %link{:rel => :stylesheet, :href => "#{app_root}/css/bootstrap.min.css", :type => "text/css"}
    %link{:rel => :stylesheet, :href => "//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css", :type => "text/css"}
    %link{:rel => :stylesheet, :href => "#{app_root}/style.css", :type => "text/css"}
    %script{ :src => "http://code.jquery.com/jquery-1.8.2.min.js" }
    %script{ :src => "http://d3js.org/d3.v3.min.js" }
    %script{ :src => "#{app_root}/js/bootstrap.min.js" }

  %body
    .container
      .navbar.navbar-fixed-top
        .navbar-inner
          .container
            %a.btn.btn-navbar{ "data-toggle" => "collapse", "data-target" => ".nav-collapse" }
              %span.icon-bar
              %span.icon-bar
              %span.icon-bar
            %a.brand
              DBCLS SRA metadata search (beta)
            .nav-collapse
              %ul.nav
                %li
                  %a{:href => "#{app_root}"} Home
                %li
                  %a{:href => "http://g86.dbcls.jp/chateautogo" } Blog
                %li
                  %a{:href => "http://github.com/inutano/sra_metadata_toolkit", "data-toggle" => "tooltip", "title" => "github repo"}
                    %i.icon-github
                %li
                  %a{:href => "http://twitter.com/inutano", "data-toggle" => "tooltip", "title" => "Twitter" }
                    %i.icon-twitter
                :javascript
                  $("a").tooltip({
                    'selector': '',
                    'placement': 'bottom'
                  });

      .page-header
        %h1
          DBCLS SRA Metadata Search
          %small
            project: Soylatte

      %section
        .row
          - post_option = "species=#{@species}&type=#{@type}&instrument=#{@instrument}"
          .span7
            %p.lead Requested filtering condition
            %ul.inline
              %li= [@species, @type, @instrument].delete_if{|n| !n or n.empty? }.join(", ")
              %li
                %form.search{ :name => "view-all", :action => "#{app_root}/search?#{post_option}&search_query=", :method => "POST" }
                  %button.btn{ :type => "submit" }
                    view all
            .donut
          .span5
            %p.lead Fulltext search
            %form.search{ :name => "search", :action => "#{app_root}/search?#{post_option}", :method => "POST" }
              %label Search with this condition
              %input.input-large.search-query{ :type => "text", :name => "search_query" }
              %button.btn{ :type => "submit" }
                search
        %hr
        %p.lead For each condition:
        .row
          .span4
            %p.lead Sample Organism
            %p= (!@species or @species.empty?) ? "All" : @species
            .donut
          .span4
            %p.lead Study Type
            %p= (!@type or @type.empty?) ? "All" : @type
            .donut
          .span4
            %p.lead Sequencing Platform
            %p= (!@instrument or @instrument.empty?) ? "All" : @instrument
            .donut

      :javascript
        var radius = 120;

        var color = d3.scale.ordinal()
            .range(["LightSkyBlue", "LightGray"]);

        var arc = d3.svg.arc()
            .outerRadius(radius)
            .innerRadius(radius - 50);

        var pie = d3.layout.pie()
            .sort(null)
            .value(function(d){ return d.count })

        d3.json("#{app_root}/donuts?#{@request_option}", function(error, data) {
          color.domain(d3.keys(data[0]).filter(function(key){ return key !== "Stat"; }));

          data.forEach(function(d){
            d.status = color.domain().map(function(name){
              return {name: name, count: +d[name]};
            });
          });

          var svg = d3.select("body").selectAll(".donut")
              .data(data)
              .append("svg")
              .attr("width", radius * 2)
              .attr("height", radius * 2)
            .append("g")
              .attr("transform", "translate(" + radius + "," + radius + ")");

          svg.selectAll(".arc")
              .data(function(d){ return pie(d.status); })
            .enter().append("path")
              .attr("class", "arc")
              .attr("d", arc)
              .style("fill", function(d) { return color(d.data.name); });

          svg.append("text")
            .attr("dy", ".05em")
            .style("text-anchor", "middle")
            .text(function(d) { return d.Stat.num + " projects"; });

          svg.append("text")
            .attr("dy", "1.05em")
            .style("text-anchor", "middle")
            .text(function(d) { return d.Stat.per + "%"; });
        });

      %footer
        powered by
        %a{ :href => "http://dbcls.rois.ac.jp/en" }
          DBCLS
        , project licensed under CC-BY 2.1 JP. /
        Font Awesome by Dave Gandy -
        %a{ :href => "http://fortawesome.github.com/Font-Awesome" }
          http://fortawesome.github.com/Font-Awesome
